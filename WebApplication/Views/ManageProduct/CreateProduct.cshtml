@{
    ViewBag.Title = "CreateProduct";
    Layout = "~/Views/Shared/LayoutAdmin.cshtml";
}

@model WebApplication.Models.ProductModel

<h2>Create Product</h2>

@using (Html.BeginForm("CreateProductAction", "ManageProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="productNumber">Number</label>
        @Html.TextAreaFor(model => model.ProductNumber, new { @class = "form-control", id = "productNumber", rows = 5, required = "required" })
    </div>

    <div class="form-group">
        <label for="productName">Name</label>
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", id = "productName", required = "required" })
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", id = "price", type = "number", required = "required" })
    </div>

    <div class="form-group">
        <label for="categoryByAge">Age Category</label>
        @Html.DropDownListFor(model => model.CategoryByAge, new SelectList(new[] {
            new { Value = "0-3", Text = "0-3" },
            new { Value = "3-10", Text = "3-10" },
            new { Value = "10-16", Text = "10-16" },
            new { Value = "16-21", Text = "16-21" }
        }, "Value", "Text"), new { @class = "form-control", id = "categoryByAge", required = "required" })
    </div>

    <div class="form-group">
        <label for="category">Category</label>
        @Html.DropDownListFor(model => model.Category, new SelectList(new[] {
            new { Value = "Toy Sets", Text = "Toy Sets" },
            new { Value = "Plush Toy", Text = "Plush Toy" },
            new { Value = "Lego Bricks", Text = "Lego Bricks" },
            new { Value = "Remote Control", Text = "Remote Control" }
        }, "Value", "Text"), new { @class = "form-control", id = "category", required = "required" })
    </div>

    <div class="form-group">
        <label for="sellCategory">Sell Category</label>
        @Html.DropDownListFor(model => model.SellCategory, new SelectList(new[] {
            new { Value = "On Sales", Text = "On Sales" },
            new { Value = "Top Sales", Text = "Top Sales" },
            new { Value = "Boys", Text = "Boys" },
            new { Value = "Girls", Text = "Girls" }
        }, "Value", "Text"), new { @class = "form-control", id = "sellCategory", required = "required" })
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", id = "quantity", type = "number", required = "required" })
    </div>

    <div class="form-group">
        <label for="productDetail">Product Detail</label>
        @Html.TextAreaFor(model => model.ProductDetail, new { @class = "form-control", id = "productDetail", rows = 5 })
    </div>

    <div class="form-check">
        @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input", id = "isActive" })
        <label class="form-check-label" for="isActive">Is Active</label>
    </div>

    <div class="form-group">
        <label for="articleImage">Image</label>
        <input type="file" class="form-control-file" id="ProductImage" name="ProductImage">
        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Save changes</button>
    <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Index", "ManageProduct")'">Cancel</button>
}
